from django.db import models
from django.contrib.auth.models import User


class Post(models.Model):
    titulo = models.CharField(max_length=200)
    cuerpo = models.TextField()
    pub_date = models.DateTimeField('Fecha Publicacion', auto_add_now=True)
    author = models.ForeignKey(User)

    def __unicode__(self):
        return "%s" % (self.titulo)


class Comentario(models.Model):
    post = models.ForeignKey(Post, on_delete=models.CASCADE)
    comentario = models.CharField(max_length=200)
    pub_date = models.DateTimeField(auto_now=true)
    author = models.ForeignKey(User)

    class Meta:
        unique_together = ('post', 'author', 'pub_date')

    def __unicode__(self):
        return "%s: %s" % (self.post, self.author)


models.BigIntegerField()
models.BooleanField()
models.CharField()
models.DateField()
models.DateTimeField()
models.DecimalField()
models.EmailField()
models.FileField()
models.FieldFile()
models.ImageField()
models.IntegerField()
models.PositiveIntegerField()
models.PositiveSmallIntegerField()
models.TextField()
models.URLField()
models.ForeignKey()
models.ManyToManyField()


null=[True, False]
blank=[True, False]
choices=[(A, B), (A, B)]
default="Valor del mismo tipo del campi que va a tomar por defecto"
editable=[True, False]
help_text="Texto de atuda que figurara en el admin"
primary_key=[True, False]
unique=[True, False]
verbose_name="Un texto que queremos que se muestre como label del campo‚Äù

on_delete
* CASCADE
* PROTECT
* SET_NULL
* SET_DEFAULT
* SET()
